요청 파라미터
	- 요청 메세지 종류
		* 폼 파라미터
			<input>태그에 적힌 정보들이 body부에 담겨서 전달된다.
		* 쿼리스트링
			URL끝에 입력되어서 그 값이 전달된다.
	- 요청 방식
		* 클라이언트가 서버로 데이터(요청파라미터)를 전송하는 방식에 따라서 구분한 것이다.
		* GET 방식
			- 요청URL 뒤에 ?와 함께 요청 파라미터를 붙여서 전송하는 것이다.
			* 형식	
				http://서버명/경로/xxx.jsp?name=value&name=value&name=value
			* 서버로 전달되는 데이터 형식
				name=value&name=value&name=value
			* 특징
				- <form>태그를 사용하지 않고도 요청파라미터값을 서버로 전송할 수 있다.
				- <a>태그의 href에 링크주소를 작성할 때 서버로 전송할 데이터를 쿼리 스트링형태로 지정할 수 있다.
				- 대용량의 데이트를 전달할 수 없다.
				- 첨부파일 업로드, 동영상 업로드, 사진 업로드 등이 불가능 하다.
				- 서버로 전송되는 값이 URL이 그대로 노출되기 때문에 보안성이 취약하다.
				- <form>의 method 속성을 생략하거나, method 속성을 "GET"으로 저정하고
			  	  submit 버튼을 클릭하는 경우.
				- GET방식 요청일 때는 body부가 비어있다.
				- body부에 요청파라미터를 담아서 서버로 전달할 수 없다.
				- GET방식은 데이터의 조회가 목적이다.

		* POST 방식
			* 요청메세지의 body부에 요청파라미터가 포함되어서 서버로 전송된다.
			* <form method="post">로 지정했을 때만 폼입력값들이 POST 방식으로 전송된다.
			* 서버로 전달되는 데이터 형식
				name=value&name=value&name=value
			* 특징
				- 서버로 전송하는 데이터의 크기에 제한이 없다.
				- 첨부파일, 동영상, 사진 등을 서버로 업로드할 수 있다.
				- 서버로 전송되는 값이 URL에 노출되지 않기 때문에 GET방식보다 보안성이 높다.
				- <form>태그의 method="post"로 지정하고, submit 버튼을 클릭하는 경우.
				- body부가 존재한다.
				- body부의 요청파라미터 정보(form의 입력값)을 담아서 서버로 전송할 수 있다.
				- 서버로 데이터의 전달이 목적이다.(DB의 저장, 수정..)일 때 사용된다.

		* PUT 방식	-|
		* DELETE 방식	-|----- 사용하지 않는다.
		* HEAD 방식	-|
		* OPTIONS 방식	-|

	- Client가 서버로 데이터를 전달하는 방법
		* POST 	=> 요청메세지의 body부에 name=value&name=value의 형식으로 form 입력값을 서버로 전달.
		* GET	=> 서버로 전달할 값을 요청URL의 끝에 쿼리스트링 형태로 만들어서 붙인다.
고급 서브쿼리
	- 다중 열 서브쿼리
		* 서브쿼리가 여러 행 및 여러 열을 반환한다.
		* select column1, column2, ...
		  from table
		  where (column, column) in (select column, column
					     from table
					     where 조건식)
		* 연산자는 in을 사용한다.

	- 스칼라 서브쿼리
		* 스칼라 서브쿼리는 1행 1열의 값만 반환한다.
		* 스칼라 서브쿼리를 실행하면 값 하나가 획득된다.
		* 사용가능한 곳
			select절, from절, where절에서 연산자의 왼쪽,
			insert문의 values절, update문의 set절,
			case와 decode의 조건식 및 표현식
		* 사용예)
		  -- 사원아이디, 이름, 급여, 평균급여와의 차이를 조회하기
		  select employee_id, first_name, salary
	  	       , (select avg(salary) from employees) - salary gap
		  from employees;

		  -- 부서아이디, 부서명, 해당부서의 사원수를 조회하기
		  select outter.department_id
	               , outter.department_name
		       , (select count(*)
	          	  from employees
	 	          where department_id = outter.department_id) cnt
	          from departments outter;

	- 상호관련 서브쿼리
		* 조회된 행 단위로 서브쿼리가 사용된다.
		* 서브쿼리가 외부 쿼리의 모든 행에 대해서 한번씩 실행된다.
		* select column1, column2, ...
		  from table1 OUTER
		  where column 연산자 (select column
				       from table2 INNER
				       where INNER.column = OUTER.column);
		* 사용예)
		  -- 소속부서의 평균급여보다 급여를 많이 받는 사원의 이름, 급여를 조회하기
		  select outter.employee_id, outter.first_name, outter.salary, outter.department_id
		  from employees outter
		  where outter.salary > (select avg(inners.salary)
                		  	 from employees inners
		                  	 where outter.department_id = inners.department_id);
		  -- 외부 SQL이 실행 되어서 행을 가져온다.(후보행)
		  -- 후보행의 행마다 department_id값을 가져와서 서브쿼리를 실행한다.
		  -- 서브쿼리의 결과값을 사용해서 후보행을 검증한다.
		  -- 검증을 통과한 행만 최종 결과로 출력된다.
	
	- exists
		* 서브쿼리 실행결과 조회된 행이 있는지 여부를 확인하는 연산자다.
		* 서브쿼리 실행 중 조건을 만족하는 행이 존재하면 즉시 true를 반환하고, 검색을 중단한다.
		* 사용예
		  -- 부하직원을 있는 직원을 조회하기       
		  select *
		  from employees 상사
		  where exists (select 1  	<----- 상수값
	                        from employees 부하
	    	                where 부하.manager_id = 상사.employee_id); 
		  * 서브쿼리에서는 값을 조회하는 것이 목적이 아니기 때문에 보통 상수값을 적는다.
		  * exists 연산자는 서브쿼리에서 행이 검색되면 true값을 반환한다.
	- with
		* 중복되는 SQL문을 가상의 테이블로 만들 수 있다.
		* with 
		     테이블명 as
		     (select column,column
		      from table
		      [where 조건식]),
		     테이블명 as
		     (select column, ...
		      from table)...
		  
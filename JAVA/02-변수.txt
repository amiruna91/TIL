1.변수 (variable)
  변수 : 값을 저장해 둘 공간
  식별자 : 변수의 이름

 1)자료형(데이터 타입)
   문자형 : char
   정수형 : byte, short, int, long
   실수형 : float, double
   논리형 : boolean

 2)변수 선언
   변수를 선언 할때는 저장할 값의 종류에 따라 변수의 타입을 선택한다.
   
   변수의 초기화( 변수에 값을 대입하는 것)
   변수타입 식별자 =(대입 연산자) 값;

 3)sysout을 사용하여 변수 출력
   System.out.println(변수명)

2.상수(constant)
  상수 : 변수와는 달리 담긴 값이 변하지 않는다.
  final(최종의) int(자료형) 상수명 = 값;
  
3.리터럴(literal)
  원래 12, 3.14, 123 와 같은 값들은 '상수' 인데, 프로그램상 상수를 '값을 한 번 저장하면 변경할수 없는
 저장공간'으로 정의하였기 때문에 이와 구분하기 위해 상수를 다른 이름인 '리터럴'로 불르기로 정의 했다.
  
  논리값 리터럴 : true, false
  정수 리터럴   : 2, -20, 0
  실수 리터럴   : 2.0, 2., 3.14
  문자 리터럴   : 'A', 'B'
  문자열 리터럴 : "홍길동", "안녕하세요"

4.예약어
  예약어 : 자바에서 특별한 용도로 사용하도록 미리 정해진 키워드.(int, final, class, static...)
  * 예약어는 식별자로 사용할 수 없다. 예: int class(x) = 10;

5.8진수 16진수
   int num  = 12; 1x10¹ + 2x10		12
   int num2 = 012; 1x8¹ + 2x8		18
   int num3 = 0x12; 1x16¹ + 2x16  	164

6.유니코드 와 아스키 코드
  char ch1 = 'A'; 	A	// 문자 A를 대입한다.
  char ch2 = '\u0041';	A	// 유니코드표에서 0041코드에 해당하는 문자를 대입한다.
  char ch3 = 65;	A	// 아스키코드표에서 65번에 해당하는 문자를 대입한다.
  * 컴퓨터 간에 코드를 보낼때 높은전압(1) 낮은전압(0) 으로 보낸다. 즉 16진수로 나누어서 2진수 01000001
   를 전압형태로 보내는거다. 
  
7.기본형과 참조형
  기본형 변수는 실제 값(data)을 저장하는 반면, 참조형 변수는 값이 저장되어 있는 주소(memory address)를 
 값으로 갖는다.
  문자열로 많은 기능들을 사용해야 되기 때문에 객체 형식으로 만들었다. 그러므로 참조형이다. 
   (크기가 가변적 이다, 소문자 대문자 상호 변환 하기, 문자열 안에 특정 문자 뽑아내기... 등)

8.class의 이름 과 상수의 이름만 첫 알파벳이 대문자이다.

9.기본형의 종류와 범위
  1)정수/실수
   byte - 부호비트 (+ : 0, - : 1) -128 ~ 127  -2^7 ~ 2^7-1
  2)문자
   char - \u0000 ~ \uffff  0 ~ 2^16-1, 0 ~ 65535
   예: \u0041  0 <- 4bit,  0 <- 4bit, 4 <- 4bit, 1 <- 4bit  총 16bit 즉 2byte를 사용한다.

10.오버플로우
  byte a = 127  2진수 : 011111111 byte 범위에서 
  01111111 + 1 을 하게 되면 10000000 이 되면서 -0이 된다 즉 최대값 + 1 -> 최소값 이 된다.
                                                             최소값 - 1 -> 최대값 
  즉 범위를 초과하는 값이 들어가면 오버플로우가 되니 맞는 타입을 적어줘야된다.

11.타입 간의 변환(기본자료형의 형변환)
  1) 정수 ------> 실수
     실수 ------> 정수
     문자 ------> 정수
     정수 ------> 실수 
  
  2)자동형변환
   컴파일러가 알아서 타입을 변환한다.
   크기가 작은 타입의 값을 크기가 큰 타입으로 변환시키는 것.
   정밀도가 낮은 타입의 값을 정밀도가 높은 타입으로 변환시키는 것.
   값의 손실이 발생하지 않는 타입변환이다.
   	예:	double a = 3; 
   자바는 연산을 할때 항상 같은 타입으로 변환되서 연산을 한다. 그리고 그 결과 또한 연산된 타입과 같은 
  타입이다.

  3)수동형변환
   개발자가 직접 변환할 타입을 지정해서 형변환을 시킨다.
   실수 -> 정수로 변환하는 것
	예: int x = (int) 3.14;
   데이터의 손실이 발생하는 변환임. 컴파일러가 3.14를 3으로 변환하지 않고 오류를 표시함.
   (int) 형변환의사를 직접 표시한다.

12.문자열 결합하기
  문자열과 +연산자를가 같이 사용될때는 문자열과 해당 값이 결합되어서 새로운 문자열이 만들어진다.
  예 : "문자열" + 3 ---> "문자열3",  3 + "문자열" ---> "3문자열"

13.변수 활용하기
  
표준 입출력(Standard I/O)
	System 클래스는 JVM이 실행중인 시스템(운영체제)의 정보를 제공해주는 클래스다.
		- System.in
			InputStream이 구현되여있다.
		- System.out
			PrintStream이 구현되여있다.
		- System.err
			PrintStream이 구현되여있다.

		*PrintStream은 출력 전용의 스트림이다.
			       다양한 타입의 값을 출력시킬 수 있다.
		 print(byte b), print(int c), println(long d) 등 
		 다양한 타입의값을 출력할 수 있는 프린트 메서드가 중복 정의되여 있다.

직렬화(serizliztion)
	: 객체를 스트림을 통해서 전송 가능하게 만드는것을 직렬화 라고 한다.
	* 스트림으로부터 데이터를 읽어서 객체를 만드는 것을 역직렬화 라고 한다.

	ObjectOutputStream - 객체의 정보를 밖으로 내보내는 것이 Ouput이다 (직렬화)
	ObjectInputStream - 직렬화된 데이터를 가지고 읽어서 다시 객체를 만드는 것이 Input이다 (역직렬화)

	* 객체의 데이터를 다른 형식의 데이터(XML, JSON, CSV) 포멧으로 변하는걸 마샬링, 
	 그반대를 언마샬링(파싱) 이라고 한다. 

	* 여기서 개발자가 하는일은 객체를 직렬화 가능한 객체로 만들어 주는것이다!!!!!
	* 직렬화는 변수에만 해당된다. 메서드는 해당되지 않는다.
	* 직렬화 가능한 클래스를 만드는 방법은 implements Serializable만 해주면된다.
	* 포함하는 객체도 직렬화가 가능해야지만 그걸 포함한 객체도 직렬화가 가능하다.
	* 상속관계에서도 부모클래스가 직렬화가 가능하면 자식클래스도 직렬화가 가능하다.
		변수에 transient 를 붙이면 직렬화 대상에서 제외된다.
	*  serialVersionUID를 지정안하면 default로 임의 값이 들어간다. 하지만 변수/메서드를 변경시 
	 default로 들어간 UID값은 계속 변경이된다.
	   이때 직렬화를 해서 객체를 보내면 역직렬화 할때 제일 먼저 비교하는게 serialVersionUID를 가장
	 먼저 비교한다. 만약 UID값이 같으면 동일 클래스라고 인식되어 빨리 식별 되며 시간을 단축시킬 수 있다.
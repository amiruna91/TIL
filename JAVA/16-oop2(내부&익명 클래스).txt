1.내부 클래스 (inner class)
	1) 종류
		인스턴스 내부클래스 (멤버 내부클래스)
		스태틱 내부클래스
		지역 내부클래스

 인스턴스 내부클래스(중요!!)	스태틱 내부메서드		지역 내부클래스
class A {			class A {			class A {
    멤버변수		    	   멤버변수			    멤버변수
    생성자 		    	   생성자			    생성자
    멤버메서드              	   멤버메서드			    멤버메서드
   	
     class B {		    	   static class B {		    public void m1() {
     }  		    	   }					class B {
}				}					}
								}
	2) 특징
		- 내부클래스로 선언 하면 두 클래스의 멤버들 간에 서로 쉽게 접근할 수 있다
		- 코드의 복잡성을 줄일 수 있다.(캡슐화)

	3) 차이점
		- 인스턴스 내부클래스
			- 외부 클래스로 외부객체가 생성된 후 내부클래스 설계도가 사용가능해진다.
			  인스턴스 내부클래스는 외부 클래스의 모든 멤버에 접근할 수 있다.
			  외부클래스의 클래스 메서드는 인스턴스 내부클래스를 사욜할 수 없다.
		- 스태틱 내부클래스
			- 외부클래스가 메모리에 로딩만 되어도 내부 클래스 설계도가 사용가능해진다.
			  스태틱 내부클래스는 외부 클래스의 클래스 멤버에만 접근할 수 있다.
			  스태틱 메서드에서 사용가능한 외부클래스는 스태틱 내부클래스 뿐이다.

	--------------------------------------------------------------------------------------
	구분		사용가능싯점		접근범위		사용불가능한 곳
	---------------------------------------------------------------------------------------
	인스턴스	외부객체 생성 후	외부클래스의 모든	외부클래스의 static
	내부클래스				구성요소		메서드
	---------------------------------------------------------------------------------------
	스태틱		외부클래스 설계도	외부클래스의 static		X
	내부클래스	로딩 직후		구성요소
	----------------------------------------------------------------------------------------
	로컬		해당 메서드 실행시	외부클래스의 모든 구성	 해당 메서드를 제외한
	내부클래스				요소 해당 메서드의 변수	 모든 곳
						중 상수, 값이 변경되지	
						않는 변수		
	----------------------------------------------------------------------------------------

2. while문을 사용하는 객체
	----------------------------------------------------------------------------------------
	이름			반복여부확인			데이터 꺼내기
	----------------------------------------------------------------------------------------
	Iterator		boolean hasNext()		E next()
	Eunmeration		boolean hasMoreElements()	E nextElement()
	StringTokenizer		boolean hasMoreTokens()		String nextToken()
	ResultSet		boolean next()			xxx.getxxx(String name)
	----------------------------------------------------------------------------------------
	* 반복을 지속할지 판단하기 위해서 반복여부확인 메서드를 실행한다.
	  true가 결과값으로 반환되면 꺼낼 데이터가 아직 남아있다는 것을 의미한다.

	*예)Iterator <String> iter = list.iterator();
	    while (iter.hasNext()) {
		String value = iter.next();
	    }
	    
	    ResultSet rs = pstmt.executeQuery();
	    while (rs.next()) {
	  	String name = rs.getString("USER_NAME");
		int point = rs.getInt("USER_POINT");
		Date createDate = rs.getDate("USER_CREATE_DATE");
		...
	    }

3.익명 클래스(anonymos class)
	- 단 한번밖에 객체를 생성하지 못한다.
	- 생성자가 없다.
	- 일회용이다.	   
    * 반드시 조상클래스(인터페이스, 추상클래스, 일반클래스)가 있어야 된다.
    * 조상을 기반으로 클래스가 정의되고, 딱 한번 객체를 만들 수 있다.

    - 익명클래스 만들기
	interface Parent {	<------  익명클래스 작성에 사용되는 조상 인터페이스
		void biz();
	}
	
	- 익명클래스로 객체 만들기 :
		Parent child = new Parent() {
			public void biz() {
				수행문;
				수행문;
			}
		};			
	

1.호출 스택(call stack)
  스택(stack) - 최상위에 있는 것들부터 순차적으로 꺼내서 사용할수 있다.
  호출 스택 - 메서드의 작업에 필요한 메모리 공간을 제공한다. 메서드가 호출되면, 호출스택에 호출된 메서드를
             위한 메모리가 할당되며, 작업에 필요한 지역변수들과 연산 결과 등을 저장한다. 그리고 메서드가 
	     작업을 마치면 할당된 메모리 공간은 반환되어 사라진다.    
  특징 : - 메서드가 호출되면 수행에 필요한 만큼의 메모리 스택을 할당 받는다.
         - 메서드가 수행을 마치고 나면 사용했던 메모리를 반환하고 스택에서 제거된다.
         - 호출스택의 제일 위에 있는 메서드가 현재 실행 중인 메서드이다.
         - 아래에 있는 메서드가 바로 위의 메서드를 호출한 메서드이다.

2.기본형 매개변수 와 참조형 매개변수
 기본형 매개변수:
 Call by Value - 매개변수의 기본자료형 값을 전달해서 메서드로 호출. 
	         호출되는 메서드에는 값의 *복사본* 이 전달된다.
	         메서드에서 전달 받은 값을 변경해도 원래값은 변경되지 않는다. 

 참조형 매개변수:
 Call By Reference - 메서드의 매개변수에 객체의 참조값(주소값)을 전달해서 메서드를 실행하는 것.
                     호출된 메서드에서도 원본 객체를 같이 참조하게 된다.
		     호출된 메서드에서 전달받은 주소값으로 참조되는 객체의 속성을 변경하는 것은
 		     원본 객체의 속성을 변경하는 것이 된다.

3.인스턴스 메서드 와 클래스 메서드
 - 인스턴스 메서드에서는 인스턴스 변수/ 클래스변수, 인스턴스 메서드/ 클래스 메서드 모두 사용가능하다.
 - static 메서드에서는 클래스 변수/ 클래스 메서드 만 사용 가능하다.

 객체의 인스턴스 변수와 상호작용을 하면   ------> 인스턴스 메서드로 만들고
 객체의 인스턴스 변수와 상호작용을 안하면 ------> static 메서드 만든다.

4.오버로딩 (overloading)
  자바에서는 한 클래스 내에 이미 사용하는 이름과 같은 이름을 가진 메서드가 있더라도 매개변수의 개수 또는
 타입이 다르면 같은 이름을 사용해 메서드를 정의할 수 있다. 이를 오버로딩 이라고 한다.

5.생성자(constructor)
  * 생성자는 인스턴스변수의 초기화 작업, 객체 생성시에 선행으로 실행되어야 하는 작업을 위해서 사용된다.

  - 객체가 생성될때 호출되는 메서드, 한번 호출하면 그 뒤에는 사용할 수 없다.
  - 객체가 생성되자마자 하고싶은 작업이 있기 때문에 만들어 진게 생성자 이다.
  - 생성자의 이름은 클래스의 이름과 똑같다.
  - 리턴타입이 없다.
    기본 생성자(default constructor) 
  - 클래스에 정의된 생성자가 하나도 없을 때 컴파일러가 자동으로 추가하는 생성자 메서드다.



